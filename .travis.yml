language: python
python: '2.7'
sudo: required
env:
  #matrix:
  - ANSIBLE_VERSION=latest
  - ANSIBLE_VERSION=1.4
  - ANSIBLE_VERSION=1.4.1
  - ANSIBLE_VERSION=1.4.2
  - ANSIBLE_VERSION=1.4.3
  - ANSIBLE_VERSION=1.4.4
  - ANSIBLE_VERSION=1.4.5
  - ANSIBLE_VERSION=1.5.1
  - ANSIBLE_VERSION=1.5.2
  - ANSIBLE_VERSION=1.5.3
  - ANSIBLE_VERSION=1.5.4
  - ANSIBLE_VERSION=1.5.5
  - ANSIBLE_VERSION=1.6
  - ANSIBLE_VERSION=1.6.1
  - ANSIBLE_VERSION=1.6.2
  - ANSIBLE_VERSION=1.6.3
  - ANSIBLE_VERSION=1.6.4
  - ANSIBLE_VERSION=1.6.5
  - ANSIBLE_VERSION=1.6.6
  - ANSIBLE_VERSION=1.6.7
  - ANSIBLE_VERSION=1.6.8
  - ANSIBLE_VERSION=1.6.9
  - ANSIBLE_VERSION=1.6.10
  - ANSIBLE_VERSION=1.7
  - ANSIBLE_VERSION=1.7.1
  - ANSIBLE_VERSION=1.7.2
  - ANSIBLE_VERSION=1.8
  - ANSIBLE_VERSION=1.8.1
  - ANSIBLE_VERSION=1.8.2
  - ANSIBLE_VERSION=1.8.3
  - ANSIBLE_VERSION=1.8.4
  - ANSIBLE_VERSION=1.9.0.1
  - ANSIBLE_VERSION=1.9.1
  - ANSIBLE_VERSION=1.9.2

branches:
  only:
  - master
#  - stable

services:
  - docker

before_install:
  - docker pull ubuntu:14.04
  - docker pull ubuntu:12.04
  - docker pull centos:6
  - docker pull centos:7
#  - sudo apt-get update -qq

#install:
#- if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install --upgrade ansible; else pip
#  install --upgrade ansible==$ANSIBLE_VERSION; fi
#- printf "[defaults]\nroles_path = ../" > ansible.cfg
script:
# - ansible-playbook -i tests/test-inventory tests/test.yml --syntax-check
# # See the output
# - ANSIBLE_SHORT_VERSION=`ansible-playbook --version 2> /dev/null|cut -d " " -f2|cut -d "." -f1,2` ansible-playbook -i tests/test-inventory tests/test.yml --connection=local --sudo
#
# # Run the role/playbook again, checking to make sure it's idempotent.
# - >
#    ANSIBLE_SHORT_VERSION=`ansible-playbook --version 2> /dev/null|cut -d " " -f2|cut -d "." -f1,2` ansible-playbook -i tests/test-inventory tests/test.yml --connection=local --sudo
#    | grep -q 'changed=0.*failed=0'
#    && (echo 'Idempotence test: pass' && exit 0)
#    || (echo 'Idempotence test: fail' && exit 1)

 # Run tests on Ubuntu 14
 - docker run --rm=true -v `pwd`:/ansible-pycharm:rw ubuntu:14.04 /bin/bash -c "/ansible-pycharm/tests/test-on-deb.sh $ANSIBLE_SHORT_VERSION"
 # Run tests on Ubuntu 12
 - docker run --rm=true -v `pwd`:/ansible-pycharm:rw ubuntu:12.04 /bin/bash -c "/ansible-pycharm/tests/test-on-deb.sh $ANSIBLE_SHORT_VERSION"
 # Run tests on CentOs 6
 - docker run --rm=true -v `pwd`:/ansible-pycharm:rw centos:6 /bin/bash -c "/ansible-pycharm/tests/test-on-rpm.sh $ANSIBLE_SHORT_VERSION"
 # Run tests on CentOs 7
 - docker run --rm=true -v `pwd`:/ansible-pycharm:rw centos:7 /bin/bash -c "/ansible-pycharm/tests/test-on-rpm.sh $ANSIBLE_SHORT_VERSION"


notifications:
  email: false
  hipchat:
    rooms:
      secure: K70x/dHuCKTKkW2Pqd5YMDctpCXkg2crE9zU2uzN0o8VDCCKptrvAj4mKGZPZZHOicYd7W5f8au/v+hfNquZ1mT+AiPxQQGgxKzqZBCZPvWH66ttAxntxMi5KjU1xOofGVrs6Btp99Zu1ICNmWMX1AZ8g6KCYRGzzFgSPWVJeVqQXFSC62ADaxPBkf1h9pHw9zZzWt+zcmZHpK5UzfDVLumMtYb3lF+k1ho+HkMA73BYPL8lw3YvaXa9wYhX9jgOkk/5L5HATyEFQO+60hKMa/VzVrOKBrltUQL1UkTtif7Wm5QzbjoJS5pBX55vC+k12SVDM/bzW2zMtFCPw457oLEyrSVzQzagltHiKnTAMtf8PJ6mwc6g197tbVo8eYm8hXryEFY+i/pez3LvHVdeTldRyI9/cD/DiN9Gnefv1sGNJ9eD+cBUKeQ0VzeP/L6JXXJQg+Xntx3ykh9AAxOmJtaouPHJK57EKnUNZ4sTIHa8j5LlJ3c+Es95RyOLxj8X9ch4k8BEw1uIf7sdD5t1ZXiP0wlmY2bIBJf1ryP4Rj+C3TruuMHQWHEvrsgjDUjCwQcVkZ7H0enN/iP4J5I4CkNRn9zd+0Waz1Z+4hvD1b3kYdIvclW4F0TKJa6txZAg+eTo18WXDf8w4OGS92Q9+OQQhL3kZaEhYwsDi4jQYNQ=
